<?xml version="1.0" encoding="UTF-8"?>
<beans 
xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:jpa="http://www.springframework.org/schema/data/jpa"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/data/jpa 
http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
http://www.springframework.org/schema/data/repository
http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd">
	<!-- 启动cglib代理 <aop:aspectj-autoproxy proxy-target-class="true"/>-->
    
     <!-- 启动Spring AOP的动态代理-->
    <aop:aspectj-autoproxy/>
   
    
    <!-- 加载数据库属性配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>  

	 <!--创建C3P0 数据源 ComboPooledDataSource  --> 
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${dataSource.driverClassName}"></property>
        <property name="jdbcUrl" value="${dataSource.url}"></property>
        <property name="user" value="${dataSource.username}"></property>
        <property name="password" value="${dataSource.password}"></property>
        <property name="maxPoolSize" value="40"></property>
        <property name="minPoolSize" value="1"></property>
        <property name="initialPoolSize" value="1"></property>
        <property name="testConnectionOnCheckin" value="true"></property>
        <property name="automaticTestTable" value="C3P0TestTable"></property>
        <property name="idleConnectionTestPeriod" value="18000"></property>
        <property name="maxIdleTime" value="25000"></property>
        <property name="testConnectionOnCheckout" value="true"></property>
    </bean>
 
    <!-- JPA定义实体管理器工厂 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--如果删除了persistence.xml，则需要指定实体所在的路径否则会报找不到该文件-->  
		<property name="packagesToScan" value="com.zngsgw.ssh.entity"/> 
		<!--用于指定持久化实方言-->
		<property name="jpaDialect">    
		    <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<!-- ClassLoader 实现 LoadTimeWeaver-->  
		<property name="loadTimeWeaver">
			<bean  class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<!-- 用于指定持久化实现厂商类 -->
		<property name="persistenceProvider">    
			<bean class="org.hibernate.ejb.HibernatePersistence"/>
		</property>    
		<property name="jpaProperties">
             <props>
                  <!-- 命名规则 My_NAME->MyName
                 <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop> -->
                 <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				 <prop key="hibernate.max_fetch_depth">2</prop>
				 <prop key="hibernate.hbm2ddl.auto">update</prop>
				 <prop key="hibernate.show_sql">true</prop>
                 <prop key="hibernate.format_sql">true</prop>
	
			</props>
		</property>
    </bean>
    
     <!-- JPA配置事务管理器 -->  
     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
		<property name="entityManagerFactory" ref="entityManagerFactory" />
     </bean> 
	 
	 <!-- 启用 annotation事务-->
     <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
    
    <!-- 配置Spring Data JPA扫描持久层目录,repository-impl-postfix指定repository接口的实现后缀（接口名+后缀）--> 
    <jpa:repositories base-package="com.zngsgw.ssh.repository"  repository-impl-postfix="Impl" />

     <!--context:component-scan扫描: @Component @Repository @Service @Controller-->
    <context:component-scan base-package="com.zngsgw.*"/>
  
</beans>