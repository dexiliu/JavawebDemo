<web-app xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0">
  <display-name>zngsgw</display-name>

  
  <!-- 
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-web-servlet.xml</param-value>
	</context-param>
	 -->
	<!-- csrfFilter 
	<filter>
		<filter-name>csrfFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
			<filter-name>csrfFilter</filter-name>
			<url-pattern>/*</url-pattern>
	</filter-mapping>
	 -->
	 <!--初始化Spring-->
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        classpath:applicationContext.xml
        /WEB-INF/spring-web-servlet.xml
        </param-value>
    </context-param>
	
	<!-- 字符编码过滤器，解决乱码问题 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 配置下载url过滤器 -->
	<filter>
		<filter-name>urlFilter</filter-name>
		<filter-class>com.zngsgw.ssh.util.SessionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>urlFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
	
	<!-- 应用启动时，该监听器被执行，它会读取Spring相关配置文件，其默认会到WEB-INF中想找application.xml配置文件 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 配置缓存清除监听器,负责处理由 JavaBean Introspector 功能而引起的缓存泄露 -->
	  <listener>  
	      <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
	  </listener> 
  
  
	<!-- Spring MVC核心分发器 -->
	<servlet>
	  <servlet-name>spring-web</servlet-name>
	  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	  <load-on-startup>1</load-on-startup>
	  <async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
	  <servlet-name>spring-web</servlet-name>
	  <url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<!-- cas 开始 -->
	<!--
	 <filter>
    <filter-name>CAS Single Sign Out Filter</filter-name>
    <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CAS Single Sign Out Filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>
       org.jasig.cas.client.session.SingleSignOutHttpSessionListener
    </listener-class>
  </listener>
  <filter>
    <filter-name>CAS Validation Filter</filter-name>
    <filter-class>
    org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter
   </filter-class>
    <init-param>
      <param-name>casServerUrlPrefix</param-name>
      <param-value>http://localhost:8088/cas/</param-value>
    </init-param>
    <init-param>
      <param-name>serverName</param-name>
      <param-value>http://localhost:8080/</param-value>
    </init-param>
    <init-param>
      <param-name>useSession</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>redirectAfterValidation</param-name>
      <param-value>true</param-value>
    </init-param>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>CAS Authentication Filter</filter-name>
    <filter-class>
     org.jasig.cas.client.authentication.AuthenticationFilter
   </filter-class>
    <init-param>
      <param-name>casServerLoginUrl</param-name>
      <param-value>
    http://localhost:8088/cas/login
    </param-value>
    </init-param>
    <init-param>
      <param-name>gateway</param-name>
      <param-value>false</param-value>
    </init-param>
    <init-param>
      <param-name>serverName</param-name>
      <param-value>http://localhost:8080/</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
    <filter-class>
    org.jasig.cas.client.util.HttpServletRequestWrapperFilter
   </filter-class>
  </filter>
  <filter>
    <filter-name>CAS Assertion Thread Local Filter</filter-name>
    <filter-class>
    org.jasig.cas.client.util.AssertionThreadLocalFilter
   </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CAS Authentication Filter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CAS Authentication Filter</filter-name>
    <url-pattern>/views/login/login.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CAS Validation Filter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>CAS Assertion Thread Local Filter</filter-name>
    <url-pattern>*.do</url-pattern>
  </filter-mapping>
  -->
	<!-- cas 结束 -->
	
	<!-- shiro配置 -->
	<!-- 配置shiro过滤器，先让shiro过滤系统接收到的请求 -->
	<!-- 这里的filter-name必须对应applicationContext.xml中定义的<bean id="shiroFilter"/> -->
	<!-- 使用[/*]匹配所有请求，保证所有的可控请求都经过shiro的过滤 -->
	<!-- 通常会将此filter-mapping放置到最前面（即其他filter-mapping前面），以保证它是过滤器链中第一个起作用的 -->
	<!-- 
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
   -->
  	<welcome-file-list>
  		<welcome-file>index.jsp</welcome-file>
  	</welcome-file-list>
</web-app>